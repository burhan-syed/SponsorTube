import { useEffect, useState } from "react";
import Head from "next/head";
import Search from "../components/Search";
import type { NextPage } from "next";
import Auth from "@/components/Auth";

const Home: NextPage = () => {
  //const hello = trpc.example.hello.useQuery({ text: "from tRPC" });
  const [angle, setAngle] = useState(-45);
  const [width, setWidth] = useState(0);
  useEffect(() => {
    const calcs = (v: number, w: number) => {
      const h = Math.sqrt(Math.pow(v, 2) + Math.pow(w, 2));
      let a = -45;
      if (v >= w) {
        a = Math.asin(w / h) * (180 / Math.PI);
      } else {
        const s = Math.asin(v / h) * (180 / Math.PI);
        a = 180 - 90 - s;
      }
      return { hypotenuse: h, angle: -a };
    };
    const setCalcs = () => {
      const { hypotenuse, angle } = calcs(
        window.innerWidth + 40,
        window.innerHeight + 40
      );
      setWidth(hypotenuse);
      setAngle(angle);
    };
    setCalcs();
    const onResize = () => {
      setCalcs();
    };
    window.addEventListener("resize", onResize);
    return () => {
      window.removeEventListener("resize", onResize);
    };
  }, []);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center ">
        <div className="absolute top-0 right-0">
          <Auth/>
        </div>
        <div className="h-11 w-full max-w-6xl px-2 md:w-2/3 md:px-0">
          <Search />
        </div>
      </main>
      <div className="absolute top-0 -z-10 min-h-screen min-w-full bg-slate-300">
        <div
          className="fixed right-0 origin-top-right bg-gradient-to-br from-rose-800  to-red-700 transition-transform duration-300 ease-out"
          style={{
            top: `-40px`,
            transform: `rotate(${angle}deg) translate(0px,0px)`,
            width: `${width}px`,
            height: `${width}px`,
          }}
        >
          <div className="top-0 h-20 w-full bg-gradient-to-l from-slate-800 via-slate-700 to-slate-800"></div>
        </div>
      </div>
    </>
  );
};

export default Home;

// import { signIn, signOut, useSession } from "next-auth/react";
// import { trpc } from "../utils/trpc";
// const AuthShowcase: React.FC = () => {
//   const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery();

//   const { data: sessionData } = useSession();

//   return (
//     <div className="flex flex-col items-center justify-center gap-2">
//       {sessionData && (
//         <p className="text-2xl text-blue-500">
//           Logged in as {sessionData?.user?.name}
//         </p>
//       )}
//       {secretMessage && (
//         <p className="text-2xl text-blue-500">{secretMessage}</p>
//       )}
//       <button
//         className="rounded-md border border-black bg-violet-50 px-4 py-2 text-xl shadow-lg hover:bg-violet-100"
//         onClick={sessionData ? () => signOut() : () => signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };

// type TechnologyCardProps = {
//   name: string;
//   description: string;
//   documentation: string;
// };

// const TechnologyCard = ({
//   name,
//   description,
//   documentation,
// }: TechnologyCardProps) => {
//   return (
//     <section className="flex flex-col justify-center rounded border-2 border-gray-500 p-6 shadow-xl duration-500 motion-safe:hover:scale-105">
//       <h2 className="text-lg text-gray-700">{name}</h2>
//       <p className="text-sm text-gray-600">{description}</p>
//       <a
//         className="m-auto mt-3 w-fit text-sm text-violet-500 underline decoration-dotted underline-offset-2"
//         href={documentation}
//         target="_blank"
//         rel="noreferrer"
//       >
//         Documentation
//       </a>
//     </section>
//   );
// };
